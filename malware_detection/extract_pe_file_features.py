import pefile
import os

def extract_pe_features(filepath):
    pe = pefile.PE(filepath)
    features = {}

    features['file_size'] = os.path.getsize(filepath)
    features['num_sections'] = len(pe.sections)
    features['num_imports'] = sum([len(entry.imports) for entry in pe.DIRECTORY_ENTRY_IMPORT]) if hasattr(pe, 'DIRECTORY_ENTRY_IMPORT') else 0
    features['entropy_mean'] = sum([section.get_entropy() for section in pe.sections]) / len(pe.sections)

    suspicious_apis = ['VirtualAlloc', 'WriteProcessMemory', 'LoadLibraryA', 'GetProcAddress']
    imports = []
    if hasattr(pe, 'DIRECTORY_ENTRY_IMPORT'):
        for entry in pe.DIRECTORY_ENTRY_IMPORT:
            imports += [imp.name.decode() if imp.name else '' for imp in entry.imports]

    features['num_suspicious_apis'] = sum(1 for api in suspicious_apis if api in imports)
    
    return features


features = extract_pe_features("example_malware.exe")
print(features)

